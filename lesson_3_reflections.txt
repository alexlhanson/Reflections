When would you want to use a remote repository rather than keeping all your work local?

    When I wish to collaborate with others or to access my work from multiple locations.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	If there had been changes to a local files that would be erased if I automaticaly pulled the repository to overwrite it.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

	Branches are a series of commits which stem from a place in the master code.
	Clones are a copy of a repository.
	Forks are clones from one Github account to another.

What is the benefit of having a copy of the last known state of the remote stored locally?
	
	If there are changes between the last known state stored locally I can either use it to see differences between my own current local commits or to merge it with my current state.
	It may also be I have a branch to merge it with locally that is not on the hub.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	I would use a shared drive if on the same network or some cloud service that only allows one user at a time.  Obviously only one user could check an updated file at a time.  
	Otherwise I would use Google docs, but it doesn't have version-control.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	
	Working in a branch allows me to make single unit commits towards some purpose that can be merged when they are ready to part of the master and are shown to work.
	It takes more work to do things with branches and to have to fix conflicts as smaller changes are made to master, but the result is flexibility to make potentially larger changes.